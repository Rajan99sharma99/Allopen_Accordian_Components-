{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajan Sharma\\\\Videos\\\\Assigment-for-prctise\\\\Allopen_Accordian_Components-\\\\oneatatime\\\\src\\\\Accordians.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Accordian1 = () => {\n  _s();\n\n  const data = [{\n    title: \"Tell something\",\n    text: \"hlo how are u?\"\n  }, {\n    title: \"Tell something\",\n    text: \"hlo how are u?\"\n  }, {\n    title: \"Tell something\",\n    text: \"hlo how are u?\"\n  }, {\n    title: \"Tell something\",\n    text: \"hlo how are u\"\n  }];\n  const [isActive, setActive] = useState([]);\n  useEffect(() => {\n    const byDefault = [];\n\n    for (let i = 0; i < data.length; i++) {\n      byDefault.push(false);\n    }\n\n    setActive(byDefault);\n  }, []);\n\n  const changeState = index => {\n    let newState = [];\n\n    for (let i = 0; i < data.length; i++) {\n      if (parseInt(index) === i) {\n        newState.push(true);\n      } else {\n        newState.push(false);\n      }\n    }\n\n    setActive(newState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((curElm, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"accordian-class\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => changeState(index),\n          children: [\" \", curElm.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => c,\n          children: isActive[index] ? /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-angle-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 72\n          }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fas fa-angle-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 105\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }, this), isActive[index] && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: curElm.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this))\n  }, void 0, false);\n};\n\n_s(Accordian1, \"jkPBckeaPu0/R5KhEV2lZ20gQq0=\");\n\n_c = Accordian1;\nexport default Accordian1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordian1\");","map":{"version":3,"sources":["C:/Users/Rajan Sharma/Videos/Assigment-for-prctise/Allopen_Accordian_Components-/oneatatime/src/Accordians.js"],"names":["React","useEffect","useState","Accordian1","data","title","text","isActive","setActive","byDefault","i","length","push","changeState","index","newState","parseInt","map","curElm","c"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAMC,IAAI,GAAG,CACT;AACIC,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GADS,EAKT;AACID,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GALS,EAST;AACID,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GATS,EAaT;AACID,IAAAA,KAAK,EAAE,gBADX;AAEIC,IAAAA,IAAI,EAAE;AAFV,GAbS,CAAb;AAkBA,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,SAAS,GAAG,EAAlB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCD,MAAAA,SAAS,CAACG,IAAV,CAAe,KAAf;AAEH;;AACDJ,IAAAA,SAAS,CAACC,SAAD,CAAT;AAEH,GARQ,EAQN,EARM,CAAT;;AASA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,IAAI,CAACO,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClC,UAAIM,QAAQ,CAACF,KAAD,CAAR,KAAoBJ,CAAxB,EAA2B;AACvBK,QAAAA,QAAQ,CAACH,IAAT,CAAc,IAAd;AAGH,OAJD,MAIO;AACHG,QAAAA,QAAQ,CAACH,IAAT,CAAc,KAAd;AACH;AAEJ;;AACDJ,IAAAA,SAAS,CAACO,QAAD,CAAT;AAGH,GAfD;;AAgBA,sBACI;AAAA,cAGQX,IAAI,CAACa,GAAL,CAAS,CAACC,MAAD,EAASJ,KAAT,kBAGL;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI;AAAI,UAAA,OAAO,EAAE,MAAMD,WAAW,CAACC,KAAD,CAA9B;AAAA,0BAA0CI,MAAM,CAACb,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAM,UAAA,OAAO,EAAE,MAAKc,CAApB;AAAA,oBAAyBZ,QAAQ,CAACO,KAAD,CAAR,gBAAkB;AAAG,YAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,kBAAlB,gBAAmD;AAAG,YAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA;AAA5E;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAQKP,QAAQ,CAACO,KAAD,CAAR,iBAAmB;AAAA,kBAAKI,MAAM,CAACZ;AAAZ;AAAA;AAAA;AAAA;AAAA,cARxB;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAHR,mBADJ;AA4BH,CAzED;;GAAMH,U;;KAAAA,U;AA2EN,eAAeA,UAAf","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Accordian1 = () => {\r\n    const data = [\r\n        {\r\n            title: \"Tell something\",\r\n            text: \"hlo how are u?\"\r\n        },\r\n        {\r\n            title: \"Tell something\",\r\n            text: \"hlo how are u?\"\r\n        },\r\n        {\r\n            title: \"Tell something\",\r\n            text: \"hlo how are u?\"\r\n        },\r\n        {\r\n            title: \"Tell something\",\r\n            text: \"hlo how are u\"\r\n        }\r\n    ]\r\n    const [isActive, setActive] = useState([])\r\n    useEffect(() => {\r\n        const byDefault = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            byDefault.push(false)\r\n\r\n        }\r\n        setActive(byDefault)\r\n\r\n    }, [])\r\n    const changeState = (index) => {\r\n        let newState = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            if (parseInt(index) === i) {\r\n                newState.push(true)\r\n\r\n\r\n            } else {\r\n                newState.push(false)\r\n            }\r\n\r\n        }\r\n        setActive(newState)\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n\r\n            {\r\n                data.map((curElm, index) =>\r\n\r\n                (\r\n                    <div className=\"accordian-class\">\r\n                        <div className=\"questions\">\r\n                            <h2 onClick={() => changeState(index)} > {curElm.title}</h2>\r\n                        \r\n                                \r\n                            <span onClick={()=> c }>{isActive[index] ? <i class=\"fas fa-angle-up\"></i> :<i class=\"fas fa-angle-down\"></i>}</span>\r\n                           \r\n                        </div>\r\n                        {isActive[index] && <h2>{curElm.text}</h2>}\r\n\r\n\r\n                    </div>\r\n                )\r\n\r\n\r\n                )\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Accordian1"]},"metadata":{},"sourceType":"module"}