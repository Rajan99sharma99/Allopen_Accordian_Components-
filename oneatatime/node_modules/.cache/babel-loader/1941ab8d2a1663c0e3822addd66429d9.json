{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajan Sharma\\\\Videos\\\\Assigment-for-prctise\\\\Allopen_Accordian_Components-\\\\oneatatime\\\\src\\\\Accordians.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Accordian1 = data => {\n  _s();\n\n  const [isActive, setActive] = useState([]);\n  useEffect(() => {\n    const byDefault = [];\n\n    for (let i = 0; i < data.length; i++) {\n      byDefault.push(false);\n    }\n\n    setActive(byDefault);\n  }, []);\n\n  const changeState = index => {\n    let newState = [];\n\n    for (let i = 0; i < data.length; i++) {\n      if (parseInt(index) === i) {\n        newState.push(true);\n      } else {\n        newState.push(false);\n      }\n    }\n\n    setActive(newState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.map((curElm, index) => {\n      /*#__PURE__*/\n      _jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          onClick: () => changeState(index),\n          children: [\" \", curElm.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), isActive[curElm.index] && /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: curElm.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true);\n    })\n  }, void 0, false);\n};\n\n_s(Accordian1, \"YEATxuQL/TwId/jpe+8I2h5YWg8=\");\n\n_c = Accordian1;\nexport default Accordian1;\n\nvar _c;\n\n$RefreshReg$(_c, \"Accordian1\");","map":{"version":3,"sources":["C:/Users/Rajan Sharma/Videos/Assigment-for-prctise/Allopen_Accordian_Components-/oneatatime/src/Accordians.js"],"names":["React","useEffect","useState","Accordian1","data","isActive","setActive","byDefault","i","length","push","changeState","index","newState","parseInt","map","curElm","title","text"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,MAAMC,UAAU,GAAEC,IAAD,IAAQ;AAAA;;AAErB,QAAM,CAACC,QAAD,EAAUC,SAAV,IAAqBJ,QAAQ,CAAC,EAAD,CAAnC;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,SAAS,GAAC,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1BD,MAAAA,SAAS,CAACG,IAAV,CAAe,KAAf;AAEH;;AACDJ,IAAAA,SAAS,CAACC,SAAD,CAAT;AAEH,GARQ,EAQP,EARO,CAAT;;AASA,QAAMI,WAAW,GAAGC,KAAD,IAAS;AACxB,QAAIC,QAAQ,GAAC,EAAb;;AACA,SAAI,IAAIL,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACJ,IAAI,CAACK,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC1B,UAAGM,QAAQ,CAACF,KAAD,CAAR,KAAkBJ,CAArB,EAAuB;AACnBK,QAAAA,QAAQ,CAACH,IAAT,CAAc,IAAd;AAGH,OAJD,MAIK;AACDG,QAAAA,QAAQ,CAACH,IAAT,CAAc,KAAd;AACH;AAEJ;;AACDJ,IAAAA,SAAS,CAACO,QAAD,CAAT;AAGH,GAfD;;AAgBA,sBACI;AAAA,cAEAT,IAAI,CAACW,GAAL,CAAS,CAACC,MAAD,EAAQJ,KAAR,KAAgB;AACrB;AAAA;AAAA,gCACA;AAAI,UAAA,OAAO,EAAE,MAAKD,WAAW,CAACC,KAAD,CAA7B;AAAA,0BAA0CI,MAAM,CAACC,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADA,EAEEZ,QAAQ,CAACW,MAAM,CAACJ,KAAR,CAAR,iBAA0B;AAAA,oBAAKI,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAF5B;AAAA;AAMH,KAPD;AAFA,mBADJ;AAgBH,CA5CD;;GAAMf,U;;KAAAA,U;AA8CN,eAAeA,UAAf","sourcesContent":["\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Accordian1=(data)=>{\r\n    \r\n    const [isActive,setActive]=useState([])\r\n    useEffect(()=>{\r\n        const byDefault=[]\r\n        for(let i=0;i<data.length;i++){\r\n            byDefault.push(false)\r\n\r\n        }\r\n        setActive(byDefault)\r\n\r\n    },[])\r\n    const changeState =(index)=>{\r\n        let newState=[]\r\n        for(let i=0;i<data.length;i++){\r\n            if(parseInt(index)===i){\r\n                newState.push(true)\r\n\r\n\r\n            }else{\r\n                newState.push(false)\r\n            }\r\n\r\n        }\r\n        setActive(newState)\r\n        \r\n\r\n    }\r\n    return(\r\n        <>\r\n        {    \r\n        data.map((curElm,index)=>{\r\n            <>\r\n            <h2 onClick={()=> changeState(index) } > {curElm.title}</h2>\r\n            { isActive[curElm.index] && <h2>{curElm.text}</h2>}\r\n            </>\r\n\r\n\r\n        })  \r\n       \r\n        }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Accordian1"]},"metadata":{},"sourceType":"module"}